Compilation settings

Build defines
BUILD_BLUETOOTH=0	Disable bluetooth
BUILD_BLUETOOTH=1	Enable bluetooth	
BUILD_RTC=1			Enable RTC
ENABLEMODECOULOMB	1/0

Properties, C/C++ Build, Settings, Linker: add -u _printf_float -u _scanf_float 


Interrupt map

Function			EXTI		Line			Handler
SD_DETECT (PA8)		EXTI8		8				EXTI9_5_IRQn
MOTION_INT (PC13)	EXTI13		13				EXTI15_10_IRQn
RTC Alarm 			EXTI18

================== Timer map ==================

TIM5			DAC conversion trigger			Options: TIM2, TIM3, TIM4, TIM5, TIM6 and TIM7
TIM15			ADC conversion trigger


================== CubeMX code generation ================== 
DMA & Audio:
- CubeMX generates incorrect initialisation code. In main.c: must have MX_DMA_Init(); first and then MX_DFSDM1_Init(); otherwise DMA does not work
Other:
- Remove FATFS/Target/bsp files as included in usrsrc
- Remove Middlewares/ST/ST usb / Class / CDC/Src/*

=============================== SPI ===============================
Cube initialisation:

  hspi1.Instance = SPI1;
  hspi1.Init.Mode = SPI_MODE_MASTER;
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
  hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  hspi1.Init.CRCPolynomial = 7;
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
  {
    Error_Handler();
  }

MSP init:
GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(spiHandle->Instance==SPI1)
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
    __HAL_RCC_GPIOB_CLK_ENABLE();
    /**SPI1 GPIO Configuration    
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    PB0     ------> SPI1_NSS 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = SPI1_NSS_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
    HAL_GPIO_Init(SPI1_NSS_GPIO_Port, &GPIO_InitStruct);
    
    
MSP deinit:

if(spiHandle->Instance==SPI1)
  {
  /* USER CODE BEGIN SPI1_MspDeInit 0 */

  /* USER CODE END SPI1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_SPI1_CLK_DISABLE();
  
    /**SPI1 GPIO Configuration    
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    PB0     ------> SPI1_NSS 
    */
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);

    HAL_GPIO_DeInit(SPI1_NSS_GPIO_Port, SPI1_NSS_Pin);    
    
    
   SPI1 config registers:
	CR1: 011C			0000 0001 0001 1100
	CR2: 170C
	SR: 0002
	DR: 0000
	CRCPR: 0007
	RXCRCR: 0000
	TXCRCR: 0000
	
	
X,255,255,255,255,255,255,255,255,255,255,255,255,255

